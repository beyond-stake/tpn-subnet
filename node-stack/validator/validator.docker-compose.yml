services:
  validator:
    container_name: tpn_validator
    image: taofuprotocol/tpn-subnet-validator:latest
    # Suggested command: docker compose -f validator.docker-compose.yml build --build-arg CACHEBUST=$(date +%s) && docker compose -f validator.docker-compose.yml up; docker compose -f validator.docker-compose.yml down -v
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    # Environment variables will be picked from .env unless overridden here
    environment:
      - LOG_LEVEL
      - PUBLIC_VALIDATOR_URL
      - PUBLIC_PORT
      - MAXMIND_LICENSE_KEY
      - IP2LOCATION_DOWNLOAD_TOKEN
      - POSTGRES_HOST
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
      - SYS_MODULE
    devices:
      - /dev/net/tun
    security_opt:
      - seccomp:unconfined
    privileged: true  # Optional, but ensures all capabilities are available
    stdin_open: true
    ports:
      - "${PUBLIC_PORT:-3000}:3000" 
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - maxmind_data:/app/node_modules/geoip-lite/data
      - ip2location_data:/app/ip2location_data
    networks:
      - tpn_network

  postgres:
    container_name: postgres
    image: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    shm_size: 128mb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tpn_network

  watchtower:
    container_name: tpn_validator_watchtower
    image: containrrr/watchtower
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=3600
      - WATCHTOWER_TIMEOUT=60s
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  maxmind_data:
  ip2location_data:
  postgres_data:

networks:
  tpn_network:
    driver: bridge
